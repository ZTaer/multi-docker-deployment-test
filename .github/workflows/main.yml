name: CI and Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main # 触发 CI 的分支
  pull_request:
    branches:
      - main
  workflow_dispatch: # 允许手动触发工作流
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest # 指定工作流运行的环境
    steps:
      # 步骤 1: 检查代码，并登录 Docker
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Test Client Docker Image
        run: |
          docker build -t ztaer/multi-docker-deployment-test -f ./client/Dockerfile.dev ./client
          docker run -e CI=true ztaer/multi-docker-deployment-test npm test

      # 步骤 2: 构建 Docker 镜像
      - name: Build Docker images
        run: |
          docker build -t ztaer/multi-docker-deploy-client ./client
          docker build -t ztaer/multi-docker-deploy-server ./server
          docker build -t ztaer/multi-docker-deploy-nginx ./nginx
          docker build -t ztaer/multi-docker-deploy-worker ./worker

      # 步骤 3: 将 Docker 镜像推送到 Docker Hub
      - name: Push Docker images
        run: |
          docker push ztaer/multi-docker-deploy-client
          docker push ztaer/multi-docker-deploy-server
          docker push ztaer/multi-docker-deploy-nginx
          docker push ztaer/multi-docker-deploy-worker

      # 步骤 2: 生成部署包
      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'

      # 步骤 3: 部署到 AWS Elastic Beanstalk
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v18
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ vars.AWS_APPLICATION_NAME }}
          environment_name: ${{ vars.AWS_ENVIRONMENT_NAME }}
          existing_bucket_name: ${{ vars.AWS_EXISTING_BUCKET_NAME }}
          region: ${{ vars.AWS_REGION }}
          version_label: multi-deploy-${{ github.run_number }}
          deployment_package: deploy.zip
          use_existing_version_if_available: true # 如果已存在相同版本，则使用该版本, 方便回滚项目.

